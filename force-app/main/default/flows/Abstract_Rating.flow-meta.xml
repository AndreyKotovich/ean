<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <apiVersion>50.0</apiVersion>
    <assignments>
        <name>Assign_List_of_Authors</name>
        <label>Assign List of Authors</label>
        <locationX>832</locationX>
        <locationY>400</locationY>
        <assignmentItems>
            <assignToReference>ListAuthors</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>AuthorDetails</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Authors</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Submit_Rating</name>
        <label>Submit Rating?</label>
        <locationX>665</locationX>
        <locationY>735</locationY>
        <defaultConnectorLabel>Default</defaultConnectorLabel>
        <rules>
            <name>Submit</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SubmitRating.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>AcceptToggle.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Submit_Abstract_Rating</targetReference>
            </connector>
            <label>Submit</label>
        </rules>
        <rules>
            <name>Keep_Rating_for_Review</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SubmitRating.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>AcceptToggle.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Abstract_Rating</targetReference>
            </connector>
            <label>Keep Rating for Review</label>
        </rules>
        <rules>
            <name>Conflict_of_Interest</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AcceptToggle.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Reject_Abstract_Review</targetReference>
            </connector>
            <label>Conflict of Interest</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <name>GradingChoice</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Grading__c</picklistField>
        <picklistObject>Abstract_Review__c</picklistObject>
    </dynamicChoiceSets>
    <interviewLabel>Rate all Abstracts {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Abstract Rating</label>
    <loops>
        <name>Loop_Assigned_Abstracts</name>
        <label>Loop Assigned Abstracts</label>
        <locationX>225</locationX>
        <locationY>399</locationY>
        <collectionReference>GetAbstractReviews</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Get_Abstract</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>SuccessScreen_0</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_Authors</name>
        <label>Loop Authors</label>
        <locationX>665</locationX>
        <locationY>403</locationY>
        <collectionReference>Get_Authors</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_List_of_Authors</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>ReviewScreen</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_Abstract</name>
        <label>Get Abstract</label>
        <locationX>380</locationX>
        <locationY>403</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Authors</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Loop_Assigned_Abstracts.Abstract__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Abstract__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Authors</name>
        <label>Get Authors</label>
        <locationX>500</locationX>
        <locationY>402</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Authors</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Abstract__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Loop_Assigned_Abstracts.Abstract__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Abstract_Author__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetAbstractReviews</name>
        <label>GetAbstractReviews</label>
        <locationX>225</locationX>
        <locationY>248</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Assigned_Abstracts</targetReference>
        </connector>
        <faultConnector>
            <targetReference>SuccessScreen_0</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Reviewer__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Stage__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Assigned</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Abstract_Review__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Reject_Abstract_Review</name>
        <label>Reject Abstract Review</label>
        <locationX>403</locationX>
        <locationY>869</locationY>
        <connector>
            <targetReference>SuccessScreen</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Loop_Assigned_Abstracts.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Stage__c</field>
            <value>
                <stringValue>Rejected</stringValue>
            </value>
        </inputAssignments>
        <object>Abstract_Review__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Submit_Abstract_Rating</name>
        <label>Submit Abstract Rating</label>
        <locationX>406</locationX>
        <locationY>600</locationY>
        <connector>
            <targetReference>SuccessScreen</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Loop_Assigned_Abstracts.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Comments__c</field>
            <value>
                <elementReference>Comments</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Grading__c</field>
            <value>
                <elementReference>AbstractGrading</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Investigator_Award__c</field>
            <value>
                <elementReference>InvestigatorAward</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Public_relevance__c</field>
            <value>
                <elementReference>PublicRelevance</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Stage__c</field>
            <value>
                <stringValue>Submitted</stringValue>
            </value>
        </inputAssignments>
        <object>Abstract_Review__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Abstract_Rating</name>
        <label>Update Abstract Rating</label>
        <locationX>405</locationX>
        <locationY>729</locationY>
        <connector>
            <targetReference>SuccessScreen</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Loop_Assigned_Abstracts.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Comments__c</field>
            <value>
                <elementReference>Comments</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Grading__c</field>
            <value>
                <elementReference>AbstractGrading</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Investigator_Award__c</field>
            <value>
                <elementReference>InvestigatorAward</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Public_relevance__c</field>
            <value>
                <elementReference>PublicRelevance</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Stage__c</field>
            <value>
                <stringValue>Rated</stringValue>
            </value>
        </inputAssignments>
        <object>Abstract_Review__c</object>
    </recordUpdates>
    <screens>
        <name>ReviewScreen</name>
        <label>ReviewScreen</label>
        <locationX>671</locationX>
        <locationY>588</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Submit_Rating</targetReference>
        </connector>
        <fields>
            <name>AbstractSummary</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0); font-size: 14px;&quot;&gt;&lt;u&gt;Abstract Summary&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;i&gt;Title: &lt;/i&gt;{!Get_Abstract.Title__c}&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;i&gt;Type&lt;/i&gt;: &lt;/b&gt;&lt;b style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;{!Get_Abstract.Type__c}&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;&lt;i&gt;Topic&lt;/i&gt;: {!Get_Abstract.Abstract_Topic__c}&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;i&gt;Introduction&lt;/i&gt;: &lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;{!Get_Abstract.Introduction__c}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;i&gt;Methods&lt;/i&gt;: &lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;{!Get_Abstract.Methods__c}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;i&gt;Results&lt;/i&gt;: &lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;{!Get_Abstract.Results__c}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;i&gt;Conclusion&lt;/i&gt;:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;{!Get_Abstract.Conclusion__c}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;i&gt;Disclosure: &lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;i style=&quot;color: rgb(0, 0, 0);&quot;&gt;{!Get_Abstract.Disclosure__c}&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;i&gt;Authors: &lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;{!ListAuthors}&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;i&gt;Presenter:&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;{!PresenterDetails}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>ImagesHeadlineText</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); font-size: 14px; color: rgb(62, 62, 60);&quot;&gt;&lt;i&gt;Images:&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Image1Text</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;i&gt;{!Get_Abstract.Image_1_Location__c}:&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;{!Get_Abstract.Image_1_Caption__c}&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Abstract.Image_1_ID__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ViewImage1</name>
            <extensionName>vfv:FileViewer</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fileId</name>
                <value>
                    <elementReference>Get_Abstract.Image_1_ID__c</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Abstract.Image_1_ID__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Image2Text</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;i&gt;{!Get_Abstract.Image_2_Location__c}:&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;{!Get_Abstract.Image_2_Caption__c}&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Abstract.Image_2_ID__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ViewImage2</name>
            <extensionName>vfv:FileViewer</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fileId</name>
                <value>
                    <elementReference>Get_Abstract.Image_2_ID__c</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Abstract.Image_2_ID__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Image3Text</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;i&gt;{!Get_Abstract.Image_3_Location__c}:&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;{!Get_Abstract.Image_3_Caption__c}&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Abstract.Image_3_ID__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ViewImage3</name>
            <extensionName>vfv:FileViewer</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fileId</name>
                <value>
                    <elementReference>Get_Abstract.Image_3_ID__c</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Abstract.Image_3_ID__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ConflictText</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;u&gt;Conflict of Interest&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;If you have a conflict of interest, please decline this review.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>AcceptToggle</name>
            <extensionName>flowruntime:toggle</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Are you accepting this review?</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>messageToggleActive</name>
                <value>
                    <stringValue>Yes, I accept</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>messageToggleInactive</name>
                <value>
                    <stringValue>No, there is a conflict of interest</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>ConflictComment</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>ConflictComment</elementReference>
            </defaultValue>
            <fieldText>Can you describe the conflict of interest?</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Enter less than 255 characters.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN({!ConflictComment})&lt;=255</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>AcceptToggle.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>RatingText</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;&lt;u&gt;﻿Rating&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>CurRatingText</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;Current abstract rating: &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;{!Loop_Assigned_Abstracts.Grading__c}&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 12px;&quot;&gt;If you want to change the rating, select the new rating below: &lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Loop_Assigned_Abstracts.Stage__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Rated</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>AcceptToggle.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>AbstractGrading</name>
            <choiceReferences>GradingChoice</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Please rate this abstract</fieldText>
            <fieldType>RadioButtons</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>AcceptToggle.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Comments</name>
            <defaultValue>
                <stringValue>{!Loop_Assigned_Abstracts.Comments__c}</stringValue>
            </defaultValue>
            <fieldText>Do you have any comments?</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <helpText>&lt;p&gt;Please not that your comments will be forwarded to the abstract submitter. &lt;/p&gt;</helpText>
            <isRequired>false</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Enter less than &lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;32768&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt; characters.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN({!Comments})&lt;=32768</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>AcceptToggle.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>PublicRelevanceDescription</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 12px;&quot;&gt;Public relevance&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;According to our experience, some of the aspects that could be kept in mind with respect to potential media interests are:&lt;/span&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;News with respect to diseases and conditions that concern many pople are usually more popular with the media than rare conditions. The latter, however, can also be interesting from a media point of view if surprising/ unusual results are involved.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;Data that demonstrate the important contribution of neurology to public health are as suitable for the information of the public as are prevention and lifestyle related topics.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;Results on new therapeutic approaches as well as data that might be changing therapeutic practice are also usually of interest to the media.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>AcceptToggle.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>PublicRelevance</name>
            <dataType>Boolean</dataType>
            <defaultValue>
                <elementReference>Loop_Assigned_Abstracts.Public_relevance__c</elementReference>
            </defaultValue>
            <fieldText>This abstract is relevant for the public and should be forwarded to the press office.</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>AcceptToggle.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>InvestigatorAwardDescription</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 12px;&quot;&gt;Investigator Award&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;All free presentations (oral presentations, posters) selected for &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 12px;&quot;&gt;presentation at the EAN Congress will automatically take part in the selection of an Investigator Award. The award for the 20 best presentatios will be a registration to the next EAN Congress, a certificate and the winners will be announced on www.eanpages.org. The award will be given to the first author who needs to be the person to present the work at the congress. The EAN Scientific Panels together with the Scientific Committe and the Programme Committee will be resonsible for the evaluation process before as well as during the congress. &lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>AcceptToggle.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>InvestigatorAward</name>
            <dataType>Boolean</dataType>
            <defaultValue>
                <elementReference>Loop_Assigned_Abstracts.Investigator_Award__c</elementReference>
            </defaultValue>
            <fieldText>I recommend this abstract for the Investigator Award.</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>AcceptToggle.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SubmitRating</name>
            <extensionName>flowruntime:toggle</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Do you want to submit this rating now or save it for later?</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>messageToggleActive</name>
                <value>
                    <stringValue>I want to submit this rating now</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>messageToggleInactive</name>
                <value>
                    <stringValue>I want to save this rating and submit later</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>AcceptToggle.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>SuccessScreen</name>
        <label>SuccessScreen</label>
        <locationX>225</locationX>
        <locationY>730</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Loop_Assigned_Abstracts</targetReference>
        </connector>
        <fields>
            <name>SuccessText</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0);&quot;&gt;The abstract {!Get_Abstract.Title__c} has been successfully rated!&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;To continue the rating process, click &lt;/span&gt;&lt;i style=&quot;color: rgb(0, 0, 0);&quot;&gt;Next&lt;/i&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;To change your rating, click &lt;/span&gt;&lt;i style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Previous&lt;/i&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;If you want to stop the rating process and continue another time, press &lt;/span&gt;&lt;i style=&quot;color: rgb(0, 0, 0);&quot;&gt;Esc&lt;/i&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt; on your keyboard or close this window.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>AcceptToggle.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>RejectedSuccessText</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0);&quot;&gt;Thank you for stating that there is a conflict of interest. &lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;The abstract &lt;i&gt;{!Get_Abstract.Title__c}&lt;/i&gt; has been rejected for review and will be assigned to someone else. &lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>AcceptToggle.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>SuccessScreen_0</name>
        <label>SuccessScreen</label>
        <locationX>54</locationX>
        <locationY>398</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>SuccessText_0</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;color: rgb(0, 0, 0);&quot;&gt;You have rated all abstracts!&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;To change your previous rating, click &lt;/span&gt;&lt;i style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;Previous&lt;/i&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;If you have not yet submitted your ratings, you can review and change them in the community. &lt;/p&gt;&lt;p&gt;&lt;b&gt;Do not forget to submit your ratings before the deadline.&amp;nbsp;&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>98</locationX>
        <locationY>90</locationY>
        <connector>
            <targetReference>GetAbstractReviews</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>AuthorDetails</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;ul&gt;&lt;li&gt;{!Loop_Authors.Author_First_Name__c} {!Loop_Authors.Author_Last_Name__c}, {!Loop_Authors.Author_Department__c}, {!Loop_Authors.Author_Country__c}&lt;/li&gt;&lt;/ul&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>PresenterDetails</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;ul&gt;&lt;li&gt;{!Get_Abstract.Presenter_First_Name__c} {!Get_Abstract.Presenter_Last_Name__c}, {!Get_Abstract.Presenter_Department__c}, {!Get_Abstract.Presenter_Country__c}&lt;/li&gt;&lt;/ul&gt;</text>
    </textTemplates>
    <variables>
        <name>ListAuthors</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>

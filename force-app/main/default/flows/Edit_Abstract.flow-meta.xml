<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <assignments>
        <name>AssignAbstractValues</name>
        <label>AssignAbstractValues</label>
        <locationX>160</locationX>
        <locationY>1836</locationY>
        <assignmentItems>
            <assignToReference>Get_Abstract.Bursary__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Bursary</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Tournament_Basic__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Tournament_Basic</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Authors_consent__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AuthorConsentCheckbox</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Originality__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OriginalityCheckbox</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Copyright__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CopyrightCheckbox</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Tournament_Clinical__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Tournament_Clinical</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Review_Abstract</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignAbstractValues_0</name>
        <label>AssignAbstractValues</label>
        <locationX>275</locationX>
        <locationY>1839</locationY>
        <assignmentItems>
            <assignToReference>Get_Abstract.Bursary__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Bursary</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Authors_consent__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AuthorConsentCheckbox</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Originality__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OriginalityCheckbox</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Copyright__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CopyrightCheckbox</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Review_Abstract</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignAbstractValues_0_0</name>
        <label>AssignAbstractValues</label>
        <locationX>55</locationX>
        <locationY>1837</locationY>
        <assignmentItems>
            <assignToReference>Get_Abstract.Authors_consent__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AuthorConsentCheckbox</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Originality__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OriginalityCheckbox</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Copyright__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CopyrightCheckbox</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Review_Abstract</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignAbstractValues_0_0_0</name>
        <label>AssignAbstractValues</label>
        <locationX>168</locationX>
        <locationY>1407</locationY>
        <assignmentItems>
            <assignToReference>Get_Abstract.Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>TypePublic</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Conclusion__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Conclusion</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Introduction__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Introduction</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Methods__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Methods</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Title__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Title</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Results__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Results</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Disclosure__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Disclosure</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Submitter__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$User.ContactId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Abstract_Topic__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Topics_Pick</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Affirmations_Screen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignAbstractValues_0_0_0_0</name>
        <label>AssignAbstractValues</label>
        <locationX>396</locationX>
        <locationY>1430</locationY>
        <assignmentItems>
            <assignToReference>Get_Abstract.Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>TypeInvited</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Title__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Title</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Disclosure__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Disclosure</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Submitter__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$User.ContactId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Abstract_Topic__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Topics_Pick</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Abstract.Body__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Body</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Review_Abstract</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignStage10</name>
        <label>AssignStage10</label>
        <locationX>463</locationX>
        <locationY>862</locationY>
        <assignmentItems>
            <assignToReference>$Flow.CurrentStage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Fill_Abstract_Stage_10</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Fill_Abstract_Screen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignStage20</name>
        <label>AssignStage20</label>
        <locationX>556</locationX>
        <locationY>2075</locationY>
        <assignmentItems>
            <assignToReference>$Flow.CurrentStage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Add_Files_Stage_20</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Upload_Files_Screen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignStage30</name>
        <label>AssignStage30</label>
        <locationX>520</locationX>
        <locationY>2525</locationY>
        <assignmentItems>
            <assignToReference>$Flow.CurrentStage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Add_Presenter_Stage_30</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_Presenter_Screen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignStage50</name>
        <label>AssignStage50</label>
        <locationX>395</locationX>
        <locationY>3039</locationY>
        <assignmentItems>
            <assignToReference>$Flow.CurrentStage</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Submit_Stage_50</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Submit_Screen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Enable_Error_Message</name>
        <label>Enable Error Message</label>
        <locationX>16</locationX>
        <locationY>1017</locationY>
        <assignmentItems>
            <assignToReference>ShowError</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Fill_Abstract_Screen</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>AuthorConsentChoice</name>
        <choiceText>&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt;* &lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;I confirm that I have the consent of the authors to submit this abstract&lt;/span&gt;</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>true</stringValue>
        </value>
    </choices>
    <choices>
        <name>CopyrightChoice</name>
        <choiceText>&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt;* &lt;/span&gt;I confirm that I hold the copyright for this abstract</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>true</stringValue>
        </value>
    </choices>
    <choices>
        <name>ImageLocationDefaultChoice</name>
        <choiceText>No section selected</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>No Location Selected</stringValue>
        </value>
    </choices>
    <choices>
        <name>OriginalityChoice</name>
        <choiceText>&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(255, 0, 0);&quot;&gt;* &lt;/span&gt;I confirm the originality of this abstract</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>true</stringValue>
        </value>
    </choices>
    <choices>
        <name>TopicDefaultChoice</name>
        <choiceText>Select a topic</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Select a topic</stringValue>
        </value>
    </choices>
    <choices>
        <name>TypeChoiceOnsiteOral</name>
        <choiceText>&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Onsite oral&lt;/span&gt;</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Onsite oral</stringValue>
        </value>
    </choices>
    <choices>
        <name>TypeChoiceVirtualOral</name>
        <choiceText>Virtual oral</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Virtual oral</stringValue>
        </value>
    </choices>
    <constants>
        <name>InvitedRecordTypeId</name>
        <dataType>String</dataType>
        <value>
            <stringValue>0120E000001fKtLQAU</stringValue>
        </value>
    </constants>
    <constants>
        <name>PublicRecordTypeId</name>
        <dataType>String</dataType>
        <value>
            <stringValue>0120E000001fKtQQAU</stringValue>
        </value>
    </constants>
    <decisions>
        <name>Abstract_Type</name>
        <label>Abstract Type</label>
        <locationX>274</locationX>
        <locationY>1327</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Public</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>PublicRecordTypeId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignAbstractValues_0_0_0</targetReference>
            </connector>
            <label>Public</label>
        </rules>
        <rules>
            <name>Invited</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>InvitedRecordTypeId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignAbstractValues_0_0_0_0</targetReference>
            </connector>
            <label>Invited</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Abstract_Status</name>
        <label>Check Abstract Status</label>
        <locationX>273</locationX>
        <locationY>326</locationY>
        <defaultConnector>
            <targetReference>GetEvent</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Open</defaultConnectorLabel>
        <rules>
            <name>Closed</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_Abstract.Stage__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Withdrawn</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Abstract.Stage__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>In Review</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Abstract.Stage__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Abstract.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Accepted</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Abstract.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Rejected</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Deadline_passed_screen</targetReference>
            </connector>
            <label>Closed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Checkboxes_Null</name>
        <label>Checkboxes = Null</label>
        <locationX>155</locationX>
        <locationY>1676</locationY>
        <defaultConnector>
            <targetReference>AssignAbstractValues</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>All Boxes Visible</defaultConnectorLabel>
        <rules>
            <name>RRFS_Member_and_Oral</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Bursary</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>Tournament_Basic</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>Tournament_Clinical</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <connector>
                <targetReference>AssignAbstractValues_0_0</targetReference>
            </connector>
            <label>All Boxes = Null</label>
        </rules>
        <rules>
            <name>Tournament_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Tournament_Basic</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>Tournament_Clinical</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <connector>
                <targetReference>AssignAbstractValues_0</targetReference>
            </connector>
            <label>Tournament = Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckSubmissionDeadline</name>
        <label>CheckSubmissionDeadline</label>
        <locationX>271</locationX>
        <locationY>663</locationY>
        <defaultConnector>
            <targetReference>Deadline_passed_screen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Deadline Passed</defaultConnectorLabel>
        <rules>
            <name>Deadline_Not_Passed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Flow.CurrentDateTime</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>GetEvent.Abstract_Submission_Deadline__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetMembershipStatus</targetReference>
            </connector>
            <label>Deadline Not Passed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Max_Words_Reached</name>
        <label>Max Words Reached?</label>
        <locationX>276</locationX>
        <locationY>1099</locationY>
        <defaultConnector>
            <targetReference>Abstract_Type</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Reached</defaultConnectorLabel>
        <rules>
            <name>MaximumReached</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>TotalBodyWordCount</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>250.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>WordCountBody</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>250.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Enable_Error_Message</targetReference>
            </connector>
            <label>Maximum Reached</label>
        </rules>
    </decisions>
    <decisions>
        <name>PresenterFound</name>
        <label>PresenterFound</label>
        <locationX>378</locationX>
        <locationY>2730</locationY>
        <defaultConnectorLabel>No Presenter</defaultConnectorLabel>
        <rules>
            <name>Assign_Presenter</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>PresenterLookup.recordId</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <connector>
                <targetReference>Update_Abstract_with_Presenter_0</targetReference>
            </connector>
            <label>Assign Presenter</label>
        </rules>
        <rules>
            <name>Create_Presenter_Outcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>PresenterLookup.recordId</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>NewPresenterEmail.value</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_Presenter</targetReference>
            </connector>
            <label>Create Presenter</label>
        </rules>
    </decisions>
    <decisions>
        <name>SubmitAbstractDecision</name>
        <label>SubmitAbstractDecision</label>
        <locationX>385</locationX>
        <locationY>3330</locationY>
        <defaultConnector>
            <targetReference>DraftSuccessMessage</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Keep Draft</defaultConnectorLabel>
        <rules>
            <name>Ready_to_Submit</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SubmitToggle.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SubmitAbstract</targetReference>
            </connector>
            <label>Ready to Submit</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <name>AbstractTypeChoice</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Type__c</picklistField>
        <picklistObject>Abstract__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>ImageLocationPicklistChoice</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Image_1_Location__c</picklistField>
        <picklistObject>Abstract__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>TopicChoice</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Abstract_Topic__c</picklistField>
        <picklistObject>Abstract__c</picklistObject>
    </dynamicChoiceSets>
    <formulas>
        <name>Image1Id</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE(SUBSTITUTE({!FileUpload1.contentDocIds},&apos;[&apos;,&apos;&apos;),&apos;]&apos;,&apos;&apos;)</expression>
    </formulas>
    <formulas>
        <name>Image1Name</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE(SUBSTITUTE({!FileUpload1.fileNames},&apos;[&apos;,&apos;&apos;),&apos;]&apos;,&apos;&apos;)</expression>
    </formulas>
    <formulas>
        <name>Image2Id</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE(SUBSTITUTE({!FileUpload2.contentDocIds},&apos;[&apos;,&apos;&apos;),&apos;]&apos;,&apos;&apos;)</expression>
    </formulas>
    <formulas>
        <name>Image2Name</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE(SUBSTITUTE({!FileUpload2.fileNames},&apos;[&apos;,&apos;&apos;),&apos;]&apos;,&apos;&apos;)</expression>
    </formulas>
    <formulas>
        <name>Image3Id</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE(SUBSTITUTE({!FileUpload3.contentDocIds},&apos;[&apos;,&apos;&apos;),&apos;]&apos;,&apos;&apos;)</expression>
    </formulas>
    <formulas>
        <name>Image3Name</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE(SUBSTITUTE({!FileUpload3.fileNames},&apos;[&apos;,&apos;&apos;),&apos;]&apos;,&apos;&apos;)</expression>
    </formulas>
    <formulas>
        <name>TotalBodyWordCount</name>
        <dataType>Number</dataType>
        <expression>{!WordCountIntroduction}+{!WordCountMethods}+{!WordCountResults}+{!WordCountConclusion}</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>WordCountBody</name>
        <dataType>Number</dataType>
        <expression>(LEN(Trim({!Body}))-LEN(SUBSTITUTE( Trim({!Body}) ,&quot; &quot;,&quot;&quot;)))+1</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>WordCountConclusion</name>
        <dataType>Number</dataType>
        <expression>(LEN(Trim({!Conclusion}))-LEN(SUBSTITUTE( Trim({!Conclusion}) ,&quot; &quot;,&quot;&quot;)))+1</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>WordCountIntroduction</name>
        <dataType>Number</dataType>
        <expression>(LEN(Trim({!Introduction}))-LEN(SUBSTITUTE( Trim({!Introduction}) ,&quot; &quot;,&quot;&quot;)))+1</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>WordCountMethods</name>
        <dataType>Number</dataType>
        <expression>(LEN(Trim({!Methods}))-LEN(SUBSTITUTE( Trim({!Methods}) ,&quot; &quot;,&quot;&quot;)))+1</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>WordCountResults</name>
        <dataType>Number</dataType>
        <expression>(LEN(Trim({!Results}))-LEN(SUBSTITUTE( Trim({!Results}) ,&quot; &quot;,&quot;&quot;)))+1</expression>
        <scale>0</scale>
    </formulas>
    <interviewLabel>Edit Abstract {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Edit Abstract</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>Create_Presenter</name>
        <label>Create Presenter</label>
        <locationX>279</locationX>
        <locationY>2803</locationY>
        <connector>
            <targetReference>Update_Abstract_with_Presenter</targetReference>
        </connector>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>NewPresenterEmail.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>New_Presenter_Email__c</field>
            <value>
                <elementReference>NewPresenterEmail.value</elementReference>
            </value>
        </inputAssignments>
        <object>Presenter__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Abstract</name>
        <label>Get Abstract</label>
        <locationX>281</locationX>
        <locationY>186</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Abstract_Status</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Abstract__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetEvent</name>
        <label>GetEvent</label>
        <locationX>412</locationX>
        <locationY>434</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckSubmissionDeadline</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Abstract.Event__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Event__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Abstract_Submission_Deadline__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetMembershipStatus</name>
        <label>GetMembershipStatus</label>
        <locationX>281</locationX>
        <locationY>812</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignStage10</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Abstract.Submitter__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Membership_Status__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>SubmitAbstract</name>
        <label>SubmitAbstract</label>
        <locationX>304</locationX>
        <locationY>3532</locationY>
        <connector>
            <targetReference>SubmissionSuccessScreen</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>AbstractRecordVariable.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Stage__c</field>
            <value>
                <stringValue>Submitted</stringValue>
            </value>
        </inputAssignments>
        <object>Abstract__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Abstract</name>
        <label>Update Abstract</label>
        <locationX>386</locationX>
        <locationY>2066</locationY>
        <connector>
            <targetReference>AssignStage20</targetReference>
        </connector>
        <inputReference>Get_Abstract</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Abstract_with_Presenter</name>
        <label>Update Abstract with Presenter</label>
        <locationX>280</locationX>
        <locationY>2934</locationY>
        <connector>
            <targetReference>AssignStage50</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>AbstractRecordVariable.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Presenter__c</field>
            <value>
                <elementReference>Create_Presenter</elementReference>
            </value>
        </inputAssignments>
        <object>Abstract__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Abstract_with_Presenter_0</name>
        <label>Update Abstract with Presenter</label>
        <locationX>495</locationX>
        <locationY>2857</locationY>
        <connector>
            <targetReference>AssignStage50</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>AbstractRecordVariable.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Presenter__c</field>
            <value>
                <elementReference>PresenterLookup.recordId</elementReference>
            </value>
        </inputAssignments>
        <object>Abstract__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateAbstract</name>
        <label>UpdateAbstract</label>
        <locationX>387</locationX>
        <locationY>2453</locationY>
        <connector>
            <targetReference>AssignStage30</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>AbstractRecordVariable.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Image_1_Caption__c</field>
            <value>
                <elementReference>Image_1_Caption</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Image_1_ID__c</field>
            <value>
                <elementReference>Image1Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Image_1_Location__c</field>
            <value>
                <elementReference>Image_1_Location</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Image_1__c</field>
            <value>
                <elementReference>Image1Name</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Image_2_Caption__c</field>
            <value>
                <elementReference>Image_2_Caption</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Image_2_ID__c</field>
            <value>
                <elementReference>Image2Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Image_2_Location__c</field>
            <value>
                <elementReference>Image_2_Location</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Image_2__c</field>
            <value>
                <elementReference>Image2Name</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Image_3_Caption__c</field>
            <value>
                <elementReference>Image_3_Caption</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Image_3_ID__c</field>
            <value>
                <elementReference>Image3Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Image_3_Location__c</field>
            <value>
                <elementReference>Image_3_Location</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Image_3__c</field>
            <value>
                <elementReference>Image3Name</elementReference>
            </value>
        </inputAssignments>
        <object>Abstract__c</object>
    </recordUpdates>
    <runInMode>DefaultMode</runInMode>
    <screens>
        <name>Add_Presenter_Screen</name>
        <label>Add Presenter Screen</label>
        <locationX>386</locationX>
        <locationY>2591</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>PresenterFound</targetReference>
        </connector>
        <fields>
            <name>ProgressAddPresenter</name>
            <extensionName>dhfpi:lwcProgressIndicator</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>currentStage</name>
                <value>
                    <elementReference>$Flow.CurrentStage</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>fontSize</name>
                <value>
                    <stringValue>11</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>stages</name>
                <value>
                    <elementReference>$Flow.ActiveStages</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>PresenterLookup</name>
            <extensionName>flowruntime:lookup</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fieldApiName</name>
                <value>
                    <stringValue>Presenter__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Search Presenter by Email</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectApiName</name>
                <value>
                    <stringValue>Abstract__c</stringValue>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>PresenterNotFoundDisplay</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;i&gt;If you cannot find the presenter &lt;/i&gt;&lt;/b&gt;&lt;i&gt;in the search, please create a new presenter by entering the email here:&lt;/i&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>PresenterLookup.recordId</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>NewPresenterEmail</name>
            <extensionName>flowruntime:email</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>PresenterLookup.recordId</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Check_Affirmations_Screen</name>
        <label>Check Affirmations Screen</label>
        <locationX>165</locationX>
        <locationY>1532</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Checkboxes_Null</targetReference>
        </connector>
        <fields>
            <name>ProgressFillAbstract_0</name>
            <extensionName>dhfpi:lwcProgressIndicator</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>currentStage</name>
                <value>
                    <elementReference>$Flow.CurrentStage</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>fontSize</name>
                <value>
                    <stringValue>11</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>stages</name>
                <value>
                    <elementReference>$Flow.ActiveStages</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>AffirmationHeadlin_0</name>
            <fieldText>&lt;p&gt;&lt;b&gt;&lt;u&gt;Affirmations&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;u&gt;&lt;span class=&quot;ql-cursor&quot;&gt;﻿&lt;/span&gt;&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Tournament_Basic</name>
            <dataType>Boolean</dataType>
            <defaultValue>
                <elementReference>Get_Abstract.Tournament_Basic__c</elementReference>
            </defaultValue>
            <fieldText>I wish to participate in the Tournament Basic</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;You can only apply for participation in one Tournament.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>NOT({!Tournament_Basic}=true &amp;&amp; {!Tournament_Clinical}=true)</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>(1 OR 2 OR 4) AND 3 AND 5</conditionLogic>
                <conditions>
                    <leftValueReference>TypePublic</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Virtual oral</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>TypePublic</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Onsite oral</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetMembershipStatus.Membership_Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>EAN Resident and Research Member</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>TypePublic</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Poster or Oral</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>PublicRecordTypeId</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Tournament_Clinical</name>
            <dataType>Boolean</dataType>
            <defaultValue>
                <elementReference>Get_Abstract.Tournament_Clinical__c</elementReference>
            </defaultValue>
            <fieldText>I wish to participate in the Tournament Clinical</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;You can only apply for participation in one Tournament.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>NOT({!Tournament_Clinical}=true &amp;&amp; {!Tournament_Basic}=true)</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>(1 OR 2 OR 4) AND 3 AND 5</conditionLogic>
                <conditions>
                    <leftValueReference>TypePublic</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Onsite oral</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>TypePublic</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Virtual oral</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetMembershipStatus.Membership_Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>EAN Resident and Research Member</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>TypePublic</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Poster or Oral</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>PublicRecordTypeId</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Bursary</name>
            <dataType>Boolean</dataType>
            <defaultValue>
                <elementReference>Get_Abstract.Bursary__c</elementReference>
            </defaultValue>
            <fieldText>I wish to apply for a bursary for the EAN Congress</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetMembershipStatus.Membership_Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>EAN Resident and Research Member</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>PublicRecordTypeId</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>RequiredText1</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;span class=&quot;ql-cursor&quot;&gt;﻿&lt;/span&gt;*&lt;/b&gt;&lt;b&gt; These fields are required&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>AuthorConsentCheckbox</name>
            <dataType>Boolean</dataType>
            <defaultValue>
                <elementReference>Get_Abstract.Authors_consent__c</elementReference>
            </defaultValue>
            <fieldText>* I confirm that I have the consent of the authors to submit this abstract</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;This field is required.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!AuthorConsentCheckbox}=true</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>OriginalityCheckbox</name>
            <dataType>Boolean</dataType>
            <defaultValue>
                <elementReference>Get_Abstract.Authors_consent__c</elementReference>
            </defaultValue>
            <fieldText>* I confirm the originality of this abstract</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;This field is required.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!OriginalityCheckbox}=true</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>CopyrightCheckbox</name>
            <dataType>Boolean</dataType>
            <defaultValue>
                <elementReference>Get_Abstract.Authors_consent__c</elementReference>
            </defaultValue>
            <fieldText>* I confirm that I hold the copyright for this abstract</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;This field is required.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!CopyrightCheckbox}=true</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>ConfirmAbstractFooter</name>
            <extensionName>dhfpi:lwcFlowFooter</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>backLabel</name>
                <value>
                    <stringValue>Back</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>finishLabel</name>
                <value>
                    <stringValue>Confirm</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>nextLabel</name>
                <value>
                    <stringValue>Confirm</stringValue>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Deadline_passed_screen</name>
        <label>Deadline passed screen</label>
        <locationX>124</locationX>
        <locationY>407</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>DeadlinePassedText</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;You cannot edit this abstract anymore. &lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>DraftSuccessMessage</name>
        <label>DraftSuccessMessage</label>
        <locationX>495</locationX>
        <locationY>3540</locationY>
        <allowBack>true</allowBack>
        <allowFinish>false</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>DraftSuccessDisplay</name>
            <fieldText>&lt;p&gt;Your draft has been saved.&lt;/p&gt;&lt;p&gt;All abstracts drafts can be seen and edited in the community.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Please remember to submit your abstract before the deadline {!GetEvent.Abstract_Submission_Deadline__c}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Fill_Abstract_Screen</name>
        <label>Fill Abstract Screen</label>
        <locationX>285</locationX>
        <locationY>950</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Max_Words_Reached</targetReference>
        </connector>
        <fields>
            <name>ProgressFillAbstract</name>
            <extensionName>dhfpi:lwcProgressIndicator</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>currentStage</name>
                <value>
                    <elementReference>$Flow.CurrentStage</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>fontSize</name>
                <value>
                    <stringValue>11</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>stages</name>
                <value>
                    <elementReference>$Flow.ActiveStages</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>TypePublic</name>
            <choiceReferences>AbstractTypeChoice</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Type</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>PublicRecordTypeId</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>TypeInvited</name>
            <choiceReferences>TypeChoiceVirtualOral</choiceReferences>
            <choiceReferences>TypeChoiceOnsiteOral</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Type</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>InvitedRecordTypeId</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Title</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>Get_Abstract.Title__c</elementReference>
            </defaultValue>
            <fieldText>Title</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Please enter less than 120 characters&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN({!Title})&lt;=120</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>Topics_Pick</name>
            <choiceReferences>TopicChoice</choiceReferences>
            <choiceReferences>TopicDefaultChoice</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>TopicDefaultChoice</defaultSelectedChoiceReference>
            <fieldText>Abstract Topic</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>BodyHeadlineText</name>
            <fieldText>&lt;p&gt;&lt;b&gt;&lt;u&gt;Abstract Body:&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>ErrorText</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Please enter less than 250 words.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>ShowError</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Body</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>Get_Abstract.Body__c</elementReference>
            </defaultValue>
            <fieldText>Body</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>InvitedRecordTypeId</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Introduction</name>
            <defaultValue>
                <stringValue>{!Get_Abstract.Introduction__c}</stringValue>
            </defaultValue>
            <fieldText>Introduction</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;This field is required.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN(TRIM({!Introduction}))!=0</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>PublicRecordTypeId</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Methods</name>
            <defaultValue>
                <stringValue>{!Get_Abstract.Methods__c}{!Methods}</stringValue>
            </defaultValue>
            <fieldText>Methods</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;This field is required.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN(TRIM({!Methods}))!=0</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>PublicRecordTypeId</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Results</name>
            <defaultValue>
                <stringValue>{!Get_Abstract.Results__c}{!Results}</stringValue>
            </defaultValue>
            <fieldText>Results</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;This field is required.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN(TRIM({!Results}))!=0</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>PublicRecordTypeId</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Conclusion</name>
            <defaultValue>
                <stringValue>{!Get_Abstract.Conclusion__c}</stringValue>
            </defaultValue>
            <fieldText>Conclusion</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;This field is required&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN(TRIM({!Conclusion}))!=0</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>PublicRecordTypeId</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>UploadInfoText</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 14px; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Roboto, Oxygen, Ubuntu, &amp;quot;Fira Sans&amp;quot;, &amp;quot;Droid Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, sans-serif; color: rgb(23, 43, 77);&quot;&gt;Images are uploaded and placed to the respective section in the next step.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Disclosure</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>Get_Abstract.Disclosure__c</elementReference>
            </defaultValue>
            <fieldText>Disclosure</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;This field is required.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>LEN(TRIM({!Disclosure}))!=0</formulaExpression>
            </validationRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Review_Abstract</name>
        <label>Review Abstract</label>
        <locationX>386</locationX>
        <locationY>1940</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Update_Abstract</targetReference>
        </connector>
        <fields>
            <name>AbstractSummaryHeadline</name>
            <fieldText>&lt;p&gt;&lt;b style=&quot;font-size: 16px; background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;&lt;i&gt;Please review your submission:&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>AbstractSummaryInvited</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 16px;&quot;&gt;﻿&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;Abstract Type: {!TypeInvited}&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;Topic: {!Topics_Pick}&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;&lt;u&gt;Abstract Title:&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;{!Title}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;&lt;u&gt;Abstract Body:&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;{!WordCountBody} words&lt;/p&gt;&lt;p&gt;{!Body}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); font-size: 14px;&quot;&gt;&lt;u&gt;Disclosure: &lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;{!Disclosure}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>InvitedRecordTypeId</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>AbstractSummary</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 16px;&quot;&gt;﻿&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;Abstract Type: &lt;/b&gt;&lt;b&gt;{!TypePublic}&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;Topic: &lt;/b&gt;&lt;b&gt;{!Topics_Pick}&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;&lt;u&gt;Abstract Title:&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;{!Title}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;&lt;u&gt;Abstract Body:&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;({!TotalBodyWordCount} words total)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Introduction:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;({!WordCountIntroduction} words)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;{!Introduction}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Methods:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;({!WordCountMethods} words)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;{!Methods}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;﻿Results:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;({!WordCountResults} words)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;{!Results}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;﻿Conclusion&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;({!WordCountConclusion} words)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;{!Conclusion}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;&lt;u&gt;Disclosure: &lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;{!Disclosure}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>PublicRecordTypeId</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>AffirmationHeadlineSummary</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;&lt;u&gt;Affirmations&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>(1 OR 2 OR 3) AND 4</conditionLogic>
                <conditions>
                    <leftValueReference>Tournament_Basic</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Tournament_Clinical</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Bursary</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>PublicRecordTypeId</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>TournamentBasicConfirmation</name>
            <fieldText>&lt;p&gt;&lt;img src=&quot;https://eanregisterdev--eventreg1--c.documentforce.com/sfc/servlet.shepherd/version/download/0680E000001SGW0?asPdf=false&amp;amp;operationContext=CHATTER&quot;&gt;I wish to participate in the Tournament Basic&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Tournament_Basic</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>PublicRecordTypeId</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>TournamentClinicalConfirmation</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;&lt;img src=&quot;https://eanregisterdev--eventreg1--c.documentforce.com/sfc/servlet.shepherd/version/download/0680E000001SGW5?asPdf=false&amp;amp;operationContext=CHATTER&quot;&gt;&lt;/span&gt;I wish to participate in the Tournament Clinical.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Tournament_Clinical</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>PublicRecordTypeId</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>BursaryConfirmation</name>
            <fieldText>&lt;p&gt;&lt;img src=&quot;https://eanregisterdev--eventreg1--c.documentforce.com/sfc/servlet.shepherd/version/download/0680E000001SGWA?asPdf=false&amp;amp;operationContext=CHATTER&quot;&gt;I wish to apply for a bursary for the EAN Congress&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Bursary</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Get_Abstract.RecordTypeId</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>PublicRecordTypeId</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ConfirmSummaryFooter</name>
            <extensionName>dhfpi:lwcFlowFooter</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>nextLabel</name>
                <value>
                    <stringValue>Confirm</stringValue>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Review_Files_Screen</name>
        <label>Review Files Screen</label>
        <locationX>394</locationX>
        <locationY>2329</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>UpdateAbstract</targetReference>
        </connector>
        <fields>
            <name>FileSuccessText</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);&quot;&gt;Following files have been added to your abstract:&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>FileAddedSuccessMessage_1</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;{!Image_1_Location}: &lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;﻿{!Image_1_Caption}&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Image1Id</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ViewImage1</name>
            <extensionName>vfv:FileViewer</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fileId</name>
                <value>
                    <elementReference>Image1Id</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Image1Id</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>FileAddedSuccessMessage_2</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;{!Image_2_Location}: &lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;{!Image_2_Caption}&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Image2Id</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ViewImage2</name>
            <extensionName>vfv:FileViewer</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fileId</name>
                <value>
                    <elementReference>Image2Id</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Image2Id</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>FileAddedSuccessMessage_3</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;{!Image_3_Location}: &lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;{!Image_3_Caption}&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Image3Id</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ViewImage3</name>
            <extensionName>vfv:FileViewer</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fileId</name>
                <value>
                    <elementReference>Image3Id</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Image3Id</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>SubmissionSuccessScreen</name>
        <label>SubmissionSuccessScreen</label>
        <locationX>304</locationX>
        <locationY>3667</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>SubmissionSuccessDisplay</name>
            <fieldText>&lt;p&gt;Thank you for your abstract submission!&lt;/p&gt;&lt;p&gt;You can see the status of your submitted abstract in the community.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>EndFlowFooter</name>
            <extensionName>dhfpi:lwcFlowFooter</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>finishLabel</name>
                <value>
                    <stringValue>Close</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>redirectUrl</name>
                <value>
                    <stringValue>https://eanregisterdev--eventreg1.my.salesforce.com/servlet/networks/switch?networkId=0DB3Y000000Gopq&amp;</stringValue>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Submit_Screen</name>
        <label>Submit Screen</label>
        <locationX>396</locationX>
        <locationY>3194</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>SubmitAbstractDecision</targetReference>
        </connector>
        <fields>
            <name>ProgressSubmit</name>
            <extensionName>dhfpi:lwcProgressIndicator</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>currentStage</name>
                <value>
                    <elementReference>$Flow.CurrentStage</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>fontSize</name>
                <value>
                    <stringValue>11</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>stages</name>
                <value>
                    <elementReference>$Flow.ActiveStages</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>SubmitToggle</name>
            <extensionName>flowruntime:toggle</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Do you want to submit this abstract now?</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>messageToggleActive</name>
                <value>
                    <stringValue>Yes, I want to submit my abstract now</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>messageToggleInactive</name>
                <value>
                    <stringValue>No, I want to save this draft and submit it later</stringValue>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>ConfirmSubmissionFooter</name>
            <extensionName>dhfpi:lwcFlowFooter</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>finishLabel</name>
                <value>
                    <stringValue>Submit</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>redirectUrl</name>
                <value>
                    <stringValue>https://eanregisterdev--eventreg1.my.salesforce.com/servlet/networks/switch?networkId=0DB3Y000000Gopq&amp;</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>pauseLabel</name>
                <value>
                    <stringValue>Keep Draft</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>nextLabel</name>
                <value>
                    <stringValue>Confirm</stringValue>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Upload_Files_Screen</name>
        <label>Upload Files Screen</label>
        <locationX>391</locationX>
        <locationY>2194</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Review_Files_Screen</targetReference>
        </connector>
        <fields>
            <name>ProgressFileUpload</name>
            <extensionName>dhfpi:lwcProgressIndicator</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>currentStage</name>
                <value>
                    <elementReference>$Flow.CurrentStage</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>fontSize</name>
                <value>
                    <stringValue>11</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>stages</name>
                <value>
                    <elementReference>$Flow.ActiveStages</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>AbstractCreatesSuccessText</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Following files have been added to your abstract:&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>View_Image1</name>
            <extensionName>vfv:FileViewer</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fileId</name>
                <value>
                    <elementReference>Get_Abstract.Image_1_ID__c</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>Image_1_Caption</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>Get_Abstract.Image_1_Caption__c</elementReference>
            </defaultValue>
            <fieldText>1. Caption:</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>Image_1_Location</name>
            <choiceReferences>ImageLocationPicklistChoice</choiceReferences>
            <dataType>String</dataType>
            <fieldText>1. Add image to section:</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>FileUpload1</name>
            <extensionName>forceContent:fileUpload</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>1. Upload new image</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>AbstractRecordVariable.Id</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>accept</name>
                <value>
                    <stringValue>.jpg,.png</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>fileNames</name>
                <value>
                    <elementReference>UploadedFiles</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>contentDocIds</name>
                <value>
                    <elementReference>ContentDocumentIDs</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>View_Image2</name>
            <extensionName>vfv:FileViewer</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fileId</name>
                <value>
                    <elementReference>Get_Abstract.Image_2_ID__c</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>Image_2_Caption</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>Get_Abstract.Image_2_Caption__c</elementReference>
            </defaultValue>
            <fieldText>2. Caption:</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>Image_2_Location</name>
            <choiceReferences>ImageLocationPicklistChoice</choiceReferences>
            <dataType>String</dataType>
            <fieldText>2. Add image to section:</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>FileUpload2</name>
            <extensionName>forceContent:fileUpload</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>2. Upload new image</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>AbstractRecordVariable.Id</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>accept</name>
                <value>
                    <stringValue>.jpg,.png</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>fileNames</name>
                <value>
                    <elementReference>UploadedFiles</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>contentDocIds</name>
                <value>
                    <elementReference>ContentDocumentIDs</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>View_Image3</name>
            <extensionName>vfv:FileViewer</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fileId</name>
                <value>
                    <elementReference>Get_Abstract.Image_3_ID__c</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>Image_3_Caption</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>Get_Abstract.Image_3_Caption__c</elementReference>
            </defaultValue>
            <fieldText>3. Caption:</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>Image_3_Location</name>
            <choiceReferences>ImageLocationPicklistChoice</choiceReferences>
            <dataType>String</dataType>
            <fieldText>3. Add image to section:</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>FileUpload3</name>
            <extensionName>forceContent:fileUpload</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>3. Upload new image</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>AbstractRecordVariable.Id</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>accept</name>
                <value>
                    <stringValue>.jpg,.png</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>fileNames</name>
                <value>
                    <elementReference>UploadedFiles</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>contentDocIds</name>
                <value>
                    <elementReference>ContentDocumentIDs</elementReference>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>ConfirmText2</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;i style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255); font-size: 14px;&quot;&gt;Click &lt;/i&gt;&lt;b style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255); font-size: 14px;&quot;&gt;&lt;i&gt;Next&lt;/i&gt;&lt;/b&gt;&lt;i style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255); font-size: 14px;&quot;&gt; to see which files you have uploaded.&lt;/i&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <stages>
        <name>Add_Authors_Stage_40</name>
        <isActive>true</isActive>
        <label>Add Authors</label>
        <stageOrder>40</stageOrder>
    </stages>
    <stages>
        <name>Add_Files_Stage_20</name>
        <isActive>true</isActive>
        <label>Add Files</label>
        <stageOrder>20</stageOrder>
    </stages>
    <stages>
        <name>Add_Presenter_Stage_30</name>
        <isActive>true</isActive>
        <label>Add Presenter</label>
        <stageOrder>30</stageOrder>
    </stages>
    <stages>
        <name>Fill_Abstract_Stage_10</name>
        <isActive>true</isActive>
        <label>Fill Abstract</label>
        <stageOrder>10</stageOrder>
    </stages>
    <stages>
        <name>Submit_Stage_50</name>
        <isActive>true</isActive>
        <label>Submit</label>
        <stageOrder>50</stageOrder>
    </stages>
    <start>
        <locationX>155</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>Get_Abstract</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <variables>
        <name>AbstractAuthor</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Abstract_Author__c</objectType>
    </variables>
    <variables>
        <name>AbstractAuthorCollection</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Abstract_Author__c</objectType>
    </variables>
    <variables>
        <name>AbstractRecordVariable</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Abstract__c</objectType>
    </variables>
    <variables>
        <name>ContentDocumentIDs</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>NewAuthorID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ShowError</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>totalStages</name>
        <dataType>Number</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>UploadedFiles</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
